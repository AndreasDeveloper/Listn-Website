// -------------------------------------------------------
// ALBUM PREVIEW SECTION | VERSION 1
// -------------------------------------------------------

/*
.section-mp {

    // CSS Grid
    display: grid;
    grid-template-rows: repeat(6, 8vw);
    grid-template-columns: repeat(12, 1fr);

    position: relative;
}

// THIS IS THE BACKGROUND
.previewer-bk {
    height: 100vh;
    width: 100%;
    position: absolute;
    overflow: hidden;

    &__black-layer {
        height: 100vh;
        width: 100%;
        background-color: $color-black;
        position: absolute;
        z-index: 1;
    }

    &__img {
        height: 120vh;
        width: 105%;
        -webkit-filter: blur(.6rem);
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 99;
    }
}


// Previewer 1 ------
.previewer {
    background-color: $color-black;
    border-radius: 1.5rem;
    z-index: 999;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    padding-bottom: 6rem;
    box-shadow: 0 1rem 2rem rgba($color-black, .80);

    // CSS Grid Setup
    grid-row: 2 / 5;
    grid-column: 3 / 5;
    
    // * --- MEDIA QUERIES --- * \\
    @media only screen and (max-width: $bp-desktop) {
        grid-row: 2 / 6;
        grid-column: 3 / 5;
    }
    
}

.image {

    &__img {
        height: 18rem;
        width: 100%;
        margin-top: -.5rem;
        border-top-left-radius: 1.5rem;
        border-top-right-radius: 1.5rem;
    }
}

.player {
    padding: 2.5rem;
    color: #333;
    position: relative;

    &__song-title {
        font-family: 'Josefin Sans';
        font-size: 1.8rem;
        text-align: center;
        color: $color-white;
    }
}


.buttons {
    height: 5rem;
    width: 100%;
    margin-top: 5rem;
    position: relative;
    top: 20%;
    left: 75%;
    transform: translate(-50%, -50%);
    cursor: pointer;
    font-size: 3rem;
    color: $color-white;

    &__prev {
        position: absolute;
        left: -10%;
    }
    
    &__play {
        border: 0;
        color: $color-white;
        border-radius: 50%;
        outline: none;
        position: absolute;
        top: 1%;
        left: 20%;
        fill: $color-white;
    }

    &__next {
        position: absolute;
        left: 45%;
    }
}

.seek-bar {
    width: 16rem;
    height: .5rem;
    background-color: $color-white;
    display: flex;
    border-radius: 5rem;
    margin-left: 2.5rem;
    cursor: pointer;

    // * --- MEDIA QUERIES --- * \\
    @media only screen and (max-width: $bp-desktop) {
        width: 13rem;
    }
}

.fill {
    height: .5rem;
    width: 1rem;
    background-color: $color-primary;
    border-radius: 2rem;
}

.handle {
    width: .8rem;
    height: .8rem;
    background-color: $color-primary;
    border-radius: 50%;
    margin-left: -.5rem;
    transform: scale(2.1);
}

.current-time {
    color: $color-white;
    font-family: 'Josefin Sans';
    position: absolute;
    top: 110%;
    left: 35%;
}

// Previewer 2 ------
.previewer-2 {
    background-color: $color-black;
    border-radius: 1.5rem;
    z-index: 999;

    // CSS Grid Setup
    grid-row: 2 / 5;
    grid-column: 6 / 8;

    // * --- MEDIA QUERIES --- * \\
    @media only screen and (max-width: $bp-desktop) {
        grid-row: 2 / 6;
        grid-column: 6 / 8;
    }
}

// Previewer 3 ------
.previewer-3 {
    background-color: $color-black;
    border-radius: 1.5rem;
    z-index: 999;

    // CSS Grid Setup
    grid-row: 2 / 5;
    grid-column: 9 / 11;

    // * --- MEDIA QUERIES --- * \\
    @media only screen and (max-width: $bp-desktop) {
        grid-row: 2 / 6;
        grid-column: 9 / 11;
    }
}
*/

// -------------------------------------------------------
// JAVASCRIPT MUSIC PLAYER | VERSION 1
// -------------------------------------------------------


/// Music Preview JS Setup
/*
// Creating Array with songs
var songs1 = ['resources/music-prev/Lucky You.mp3', 'resources/music-prev/Not Alike.mp3', 'resources/music-prev/Venom.mp3'];

// Creating Array for poster of each song (same in this case for each song)
var poster = ['resources/images/kamikaze-bk-2.jpg'];

// DOM | Getting song title and fill bar elements
var songTitle = document.getElementById('song-title');
var fillBar = document.getElementById('fill');

var currentTime = document.getElementById('current-time');

var song = new Audio();
var currentSong = 0;    // Points to the current song

//window.onload = playSong(); // Calling the function playSong when window is loaded

// | FUNCTION | - Plays the song
function playSong() {
    song.src = songs1[currentSong];  // set the source of the first song
    //songTitle.textContent = songs1[currentSong]; // Set the title of the song
    song.play(); // Plays the song
}

// | FUNCTION | - Play/Pause option for the player
function playNPauseSong() {
    if (song.paused) {
        song.play();
        $('#playI i').attr('class', 'icon ion-md-pause buttons__play');
    } else {
        song.pause();
        $('#playI i').attr('class', 'icon ion-md-play buttons__play');
    }
}

// | FUNCTION | - Next Song
function next() {
    currentSong++;
    if (currentSong > 2) {
        currentSong = 0;
    }
    playNPauseSong();
    playSong();
    $('#play').attr();
}

// | FUNCTION | - Previous Song
function prev() {
    currentSong--;
    if (currentSong < 0) {
        currentSong = 2;
    }
    playSong();
    $('#play i').attr('class', 'icon ion-md-pause');
}

// | FUNCTION | - Converts minutes and seconds from decimals to integers
function convertTime(seconds) {
    var min = Math.floor(seconds / 60);
    var sec = seconds % 60;

    min = (min < 10 ) ? '0' + min : min;
    sec = (sec < 10) ? '0' + sec : sec;
    currentTime.textContent = min + ':' + sec;

    totalTime(Math.round(song.duration));
}

// | FUNCTION | - Shows Total Duration of the song
function totalTime(seconds) {
    var min = Math.floor(seconds / 60);
    var sec = seconds % 60;

    min = (min < 10 ) ? '0' + min : min;
    sec = (sec < 10) ? '0' + sec : sec;
    currentTime.textContent += ' / ' + min + ':' + sec;
}

// | EVENT LISTENER | Track Bar Setup
song.addEventListener('timeupdate', function() {
    var position = song.currentTime / song.duration;
    fillBar.style.width = position * 100 + '%';

    convertTime(Math.round(song.currentTime));  // Converts decimal numbers to integers
});
*/
